{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","id","name","App","useState","default","sortField","setSortField","isReversed","setIsReversed","visibleGoods","goods","sortBy","preparedGoods","sort","good1","good2","alphabetically","localeCompare","byLength","length","reverse","getPreparedGoods","className","onClick","type","cn","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAiBKA,E,0EAZQC,EAAkB,CAC7B,CAAEC,GAAI,EAAGC,KAAM,aACf,CAAED,GAAI,EAAGC,KAAM,UACf,CAAED,GAAI,EAAGC,KAAM,QACf,CAAED,GAAI,EAAGC,KAAM,aACf,CAAED,GAAI,EAAGC,KAAM,SACf,CAAED,GAAI,EAAGC,KAAM,SACf,CAAED,GAAI,EAAGC,KAAM,QACf,CAAED,GAAI,EAAGC,KAAM,SACf,CAAED,GAAI,EAAGC,KAAM,OACf,CAAED,GAAI,GAAIC,KAAM,Y,SAEbH,K,gCAAAA,E,oBAAAA,E,YAAAA,M,KA0CE,IAAMI,EAAgB,WAC3B,MAAkCC,mBAAmBL,EAASM,SAA9D,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCH,oBAAS,GAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KAEMC,EA9BR,SACEC,EADF,GAGY,IADRC,EACO,EADPA,OAAQJ,EACD,EADCA,WAEJK,EAAa,YAAOF,GAmB1B,OAjBIC,GACFC,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQJ,GACN,KAAKb,EAASkB,eACZ,OAAOF,EAAMb,KAAKgB,cAAcF,EAAMd,MACxC,KAAKH,EAASoB,SACZ,OAAOJ,EAAMb,KAAKkB,OAASJ,EAAMd,KAAKkB,OACxC,QACE,OAAO,MAKXZ,GACFK,EAAcQ,UAGTR,EAOcS,CACnBtB,EAAiB,CAAEY,OAAQN,EAAWE,eAcxC,OACE,sBAAKe,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,kBAAMjB,EAAaR,EAASkB,iBACrCQ,KAAK,SACLF,UAAWG,IACT,SACA,UACA,CAAE,WAAYpB,IAAcP,EAASkB,iBANzC,iCAYA,wBACEO,QAAS,kBAAMjB,EAAaR,EAASoB,WACrCM,KAAK,SACLF,UAAWG,IACT,SACA,aACA,CAAE,WAAYpB,IAAcP,EAASoB,WANzC,4BAYA,wBACEK,QAAS,WAtCff,GAAeD,IAuCTiB,KAAK,SACLF,UAAWG,IACT,SACA,aACA,CAAE,YAA2B,IAAflB,IANlB,sBAYGF,GAAaE,IACd,wBACEgB,QAAS,kBA/CjBjB,EAAaR,EAASM,cAClBG,GACFC,GAAeD,KA8CTiB,KAAK,SACLF,UAAWG,IACT,SACA,YACA,YANJ,sBAeJ,6BACGhB,EAAaiB,KAAI,SAACC,GACjB,OACE,oBAAkB,UAAQ,OAA1B,SAAkCA,EAAK1B,MAA9B0B,EAAK3B,aCrI1B4B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.dd66fb59.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  { id: 1, name: 'Dumplings' },\n  { id: 2, name: 'Carrot' },\n  { id: 3, name: 'Eggs' },\n  { id: 4, name: 'Ice cream' },\n  { id: 5, name: 'Apple' },\n  { id: 6, name: 'Bread' },\n  { id: 7, name: 'Fish' },\n  { id: 8, name: 'Honey' },\n  { id: 9, name: 'Jam' },\n  { id: 10, name: 'Garlic' },\n];\nenum SortType {\n  alphabetically = 'alphabetically',\n  byLength = 'byLength',\n  default = '',\n}\n\ninterface Good {\n  id: number,\n  name: string,\n}\n\ninterface SortAndReverse {\n  sortBy: SortType\n  isReversed: boolean,\n}\n\nfunction getPreparedGoods(\n  goods : Good[],\n  { sortBy, isReversed } : SortAndReverse,\n) : Good[] {\n  const preparedGoods = [...goods];\n\n  if (sortBy) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortBy) {\n        case SortType.alphabetically:\n          return good1.name.localeCompare(good2.name);\n        case SortType.byLength:\n          return good1.name.length - good2.name.length;\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortField, setSortField] = useState<SortType>(SortType.default);\n  const [isReversed, setIsReversed] = useState(false);\n\n  const visibleGoods = getPreparedGoods(\n    goodsFromServer, { sortBy: sortField, isReversed },\n  );\n\n  function handleReverseClick() {\n    setIsReversed(!isReversed);\n  }\n\n  function handleResetClick() {\n    setSortField(SortType.default);\n    if (isReversed) {\n      setIsReversed(!isReversed);\n    }\n  }\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => setSortField(SortType.alphabetically)}\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-info',\n            { 'is-light': sortField !== SortType.alphabetically },\n          )}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => setSortField(SortType.byLength)}\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-success',\n            { 'is-light': sortField !== SortType.byLength },\n          )}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={() => handleReverseClick()}\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-warning',\n            { 'is-light': isReversed !== true },\n          )}\n        >\n          Reverse\n        </button>\n\n        { (sortField || isReversed) && (\n          <button\n            onClick={() => handleResetClick()}\n            type=\"button\"\n            className={cn(\n              'button',\n              'is-danger',\n              'is-light',\n            )}\n          >\n            Reset\n          </button>\n        ) }\n\n      </div>\n\n      <ul>\n        {visibleGoods.map((good) => {\n          return (\n            <li key={good.id} data-cy=\"Good\">{good.name}</li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}